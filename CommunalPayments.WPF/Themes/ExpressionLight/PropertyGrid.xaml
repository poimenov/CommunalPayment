<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />
    <xctk:HalfConverter x:Key="HalfConverter" />
    <xctk:ExpandableObjectMarginConverter x:Key="ExpandableObjectMarginConverter" />
    <xctk:ObjectToUIElementConverter x:Key="ObjectToUiElementConverter" />
    <xctk:IsStringEmptyConverter x:Key="IsStringEmptyConverter" />
    <xctk:IsDefaultCategoryConverter x:Key="IsDefaultCategoryConverter" />
    <xctk:SelectedObjectConverter x:Key="ObjectConverter" />

    <ContextMenu x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type xctk:PropertyGrid}, ResourceId=SelectedObjectAdvancedOptionsMenu}">
        <MenuItem Command="xctk:PropertyItemCommands.ResetValue" Header="Reset Value" />
    </ContextMenu>

    <SolidColorBrush x:Key="GlyphBrush" Color="Black" />

    <Style TargetType="xctk:PropertyGridEditorTextBlock">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="xctk:PropertyGridEditorTextBox">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="xctk:PropertyGridEditorDateTimeUpDown">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="xctk:PropertyGridEditorDecimalUpDown">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="xctk:PropertyGridEditorComboBox">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource ComboBoxTemplate}" />
    </Style>
    <Style TargetType="xctk:PropertyGridEditorCheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource CheckBoxTemplate}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>
    <Style TargetType="xctk:PropertyGridEditorIntegerUpDown">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="xctk:PropertyGridEditorLongUpDown">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>    

    <Style TargetType="{x:Type xctk:PropertyItem}"
                BasedOn="{StaticResource {x:Type xctk:PropertyItemBase}}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Padding" Value="2,2,2,2"/>
        <Setter Property="Margin"
              Value="0,0,0,1" />
        <Setter Property="VerticalContentAlignment"
              Value="Center" />
        <Setter Property="SnapsToDevicePixels"
              Value="True" />
        <Setter Property="IsTabStop"
              Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:PropertyItemBase}">
                    <Border ContextMenu="{Binding AdvancedOptionsMenu, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:PropertyGrid}}"
                       ContextMenuService.Placement="Bottom">
                        <Grid VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding NameColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xctk:PropertyGrid}}}" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_Name"
                             Background="{TemplateBinding Background}"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             Margin="0,0,1,0"
                             VerticalAlignment="Stretch"
                             HorizontalAlignment="Stretch">
                                <Grid Margin="2,2,2,2"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid Margin="{Binding Level, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ExpandableObjectMarginConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="15" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <xctk:TrimmedTextBlock x:Name="_text"
                                                   Grid.Column="1"
                                                   Text="{Binding DisplayName, RelativeSource={RelativeSource TemplatedParent}}"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Center"
                                                   TextTrimming="CharacterEllipsis"
                                                   IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:PropertyGrid}, Converter={StaticResource InverseBoolConverter}}"/>
                                    </Grid>

                                    <Grid Grid.Column="1"
                                 HorizontalAlignment="Right"
                                 Margin="5,0,5,0"
                                 Visibility="{Binding ShowAdvancedOptions, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:PropertyGrid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 xctk:ContextMenuUtilities.OpenOnMouseLeftButtonClick="True"
                                 ContextMenu="{Binding AdvancedOptionsMenu, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:PropertyGrid}}">

                                        <Image x:Name="_optionsImage"
                                     Width="11"
                                     Height="11"
                                     ToolTip="{Binding AdvancedOptionsTooltip, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </Grid>
                            </Border>

                            <Border x:Name="PART_Editor"
                             Grid.Column="1"
                             Background="{TemplateBinding Background}"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             KeyboardNavigation.DirectionalNavigation="None"
                             VerticalAlignment="Stretch"
                             HorizontalAlignment="Stretch">
                                <Border.ToolTip>
                                    <ToolTip Visibility="Collapsed"/>
                                </Border.ToolTip>
                                <ContentControl x:Name="PART_ValueContainer" Margin="0,0,15,0"
                                        Content="{TemplateBinding Editor}"
                                        Focusable="False"
                                        IsTabStop="False"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:PropertyGrid}, Converter={StaticResource InverseBoolConverter}}">
                                </ContentControl>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                           Value="True">
                            <Setter TargetName="PART_Name"
                             Property="Background"
                             Value="{DynamicResource HoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                           Value="True">
                            <Setter TargetName="PART_Name"
                             Property="Background"
                             Value="{DynamicResource SelectedBackgroundBrush}" />
                            <Setter Property="Foreground"
                             TargetName="_text"
                             Value="{DynamicResource TextBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                           Value="False">
                            <Setter Property="Foreground"
                             TargetName="PART_ValueContainer"
                             Value="{DynamicResource GlyphBrush}" />
                            <Setter Property="Foreground"
                             TargetName="_text"
                             Value="{DynamicResource GlyphBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ShowDescriptionByTooltip, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:PropertyGrid}}"
                                   Value="True" />
                                <Condition Binding="{Binding Description, RelativeSource={RelativeSource Self}, Converter={StaticResource IsStringEmptyConverter}}"
                                   Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ToolTipService.ToolTip"
                             Value="{Binding Description, RelativeSource={RelativeSource TemplatedParent}}"
                             TargetName="PART_Name" />
                        </MultiDataTrigger>
                        <Trigger Property="Validation.HasError"
                           Value="true">
                            <Setter Property="ToolTip"
                             Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=_optionsImage, Path=ToolTip}"
                               Value="{x:Static xctk:StringConstants.Local}">
                            <Setter TargetName="_optionsImage"
                             Property="Source"
                             Value="pack://application:,,,/DotNetProjects.Wpf.Extended.Toolkit;component/PropertyGrid/Images/Local11.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=_optionsImage, Path=ToolTip}"
                               Value="{x:Static xctk:StringConstants.Resource}">
                            <Setter TargetName="_optionsImage"
                             Property="Source"
                             Value="pack://application:,,,/DotNetProjects.Wpf.Extended.Toolkit;component/PropertyGrid/Images/Resource11.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=_optionsImage, Path=ToolTip}"
                               Value="{x:Static xctk:StringConstants.Databinding}">
                            <Setter TargetName="_optionsImage"
                             Property="Source"
                             Value="pack://application:,,,/DotNetProjects.Wpf.Extended.Toolkit;component/PropertyGrid/Images/Database11.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=_optionsImage, Path=ToolTip}"
                               Value="{x:Static xctk:StringConstants.Inheritance}">
                            <Setter TargetName="_optionsImage"
                             Property="Source"
                             Value="pack://application:,,,/DotNetProjects.Wpf.Extended.Toolkit;component/PropertyGrid/Images/Inheritance11.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=_optionsImage, Path=ToolTip}"
                               Value="{x:Static xctk:StringConstants.StyleSetter}">
                            <Setter TargetName="_optionsImage"
                             Property="Source"
                             Value="pack://application:,,,/DotNetProjects.Wpf.Extended.Toolkit;component/PropertyGrid/Images/Style11.png" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type xctk:PropertyGrid}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource GlyphBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="AutoGenerateProperties" Value="True"/>
        <Setter Property="ShowSearchBox" Value="False"/>
        <Setter Property="ShowSummary" Value="False"/>
        <Setter Property="ShowPreview" Value="False" />
        <Setter Property="ShowSortOptions" Value="False"/>
        <Setter Property="NameColumnWidth" Value="110"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:PropertyGrid}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource GlyphBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <Border Width="44"
                                        Height="44"
                                        Margin="6,4,0,4"
                                        Background="{DynamicResource NormalBrush}"
                                        Padding="2"
                                        Visibility="{Binding ShowPreview,
                                                             RelativeSource={RelativeSource TemplatedParent},
                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Rectangle>
                                        <Rectangle.Fill>
                                            <VisualBrush Stretch="Uniform" Visual="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToUiElementConverter}, Path=SelectedObject}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Border>
                                <StackPanel Margin="6,2,6,4"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="{Binding ShowTitle,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HalfConverter}, ConverterParameter=17}">
                                        <xctk:TrimmedTextBlock FontWeight="Bold"
                                                               Text="{TemplateBinding SelectedObjectTypeName}"
                                                               TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                    <Grid MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HalfConverter}, ConverterParameter=17}" Margin="5,0,0,0">
                                        <xctk:TrimmedTextBlock Text="{TemplateBinding SelectedObjectName}" TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                </StackPanel>
                            </StackPanel>
                            <Grid Grid.Row="2" Background="{DynamicResource NormalBrush}">
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <xctk:PropertyItemsControl x:Name="PART_PropertyItemsControl"
                                                               VerticalAlignment="Top"
                                                               Background="{DynamicResource GlyphBrush}" 
                                                               BorderBrush="{TemplateBinding BorderBrush}" 
                                                               BorderThickness="{TemplateBinding BorderThickness}"                                                               
                                                               Focusable="False"
                                                               IsTabStop="False"
                                                               ItemsSource="{Binding Properties, RelativeSource={RelativeSource TemplatedParent}}"
                                                               ItemContainerStyle="{Binding PropertyContainerStyle,
                                                                                            RelativeSource={RelativeSource TemplatedParent}}">
                                        <xctk:PropertyItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Margin="0,0,10,0" />
                                            </ItemsPanelTemplate>
                                        </xctk:PropertyItemsControl.ItemsPanel>
                                    </xctk:PropertyItemsControl>
                                </ScrollViewer>
                                <Thumb x:Name="PART_DragThumb"
                                       Width="5"
                                       Margin="6,0,0,0"
                                       HorizontalAlignment="Left"
                                       Cursor="SizeWE">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Border Background="Transparent" />
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                            <GridSplitter Grid.Row="3"
                                          Height="3"
                                          HorizontalAlignment="Stretch"
                                          Visibility="{Binding ShowSummary,
                                                               RelativeSource={RelativeSource TemplatedParent},
                                                               Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <StackPanel Grid.Row="4"
                                        Margin="0,0,0,5"
                                        Visibility="{Binding ShowSummary,
                                                             RelativeSource={RelativeSource TemplatedParent},
                                                             Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock FontWeight="Bold"
                                           Padding="2,2,2,0"
                                           Text="{Binding SelectedPropertyItem.DisplayName,
                                                          RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBlock Padding="5,2,2,0"
                                           Text="{Binding SelectedPropertyItem.Description,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                           TextWrapping="WrapWithOverflow" />
                            </StackPanel>
                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>